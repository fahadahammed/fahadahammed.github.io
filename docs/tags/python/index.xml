<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on Thoughts, Views &amp; More...</title>
    <link>https://fahadahammed.github.io/tags/python/</link>
    <description>Recent content in python on Thoughts, Views &amp; More...</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 28 Feb 2022 19:16:04 +0000</lastBuildDate><atom:link href="https://fahadahammed.github.io/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>RaspberryPi with DHT22 Sensor for Humidity and Temperature Data with InfluxDB</title>
      <link>https://fahadahammed.github.io/raspberrypi-with-dht22-sensor-for-humidity-and-temperature-data-with-influxdb/</link>
      <pubDate>Mon, 28 Feb 2022 19:16:04 +0000</pubDate>
      
      <guid>https://fahadahammed.github.io/raspberrypi-with-dht22-sensor-for-humidity-and-temperature-data-with-influxdb/</guid>
      <description>&lt;p&gt;I have been playing with RaspberryPI for a while. There are several project I tried to do with RaspberryPI. These boards play a significant role in my home lab for different experiments like Docker Private Repository, Media Server, Ad Blocker with pi-hole, Secure Proxy for anonymity, secure network access with VPN, Home Security Camera/Surveillance, Data Collector or scraper etc. But This time, I did buy a “DHT-22” sensor for monitoring room temperature and humidity. Humidity is my main concern and wanted to see how it fluctuates.&lt;/p&gt;
&lt;p&gt;So, my main plan was to get a DHT-22 to connect properly&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Finding an Efficient Solution on Reading and Comparing CSV files</title>
      <link>https://fahadahammed.github.io/finding-an-efficient-solution-on-reading-and-comparing-csv-files/</link>
      <pubDate>Sun, 06 Feb 2022 09:06:03 +0000</pubDate>
      
      <guid>https://fahadahammed.github.io/finding-an-efficient-solution-on-reading-and-comparing-csv-files/</guid>
      <description>&lt;p&gt;I have always worked with Linux Systems and thus Bash was my go to tool for some specific tasks. But now I am much more aware with Python than Bash as it does give me better grasp on things. I am not saying that for server scripting, Bash can not do some tasks. It can be used in a vast area of things to solve. But I am now comfortable with Python more.&lt;/p&gt;
&lt;p&gt;Recently, I did stumble upon of a task that was related to comparing two huge CSV files.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SSH Config and Ansible Host Generator and Why I am doing it this way?</title>
      <link>https://fahadahammed.github.io/ssh-config-and-ansible-host-generator-and-why-i-am-doing-it-this-way/</link>
      <pubDate>Wed, 26 Jan 2022 14:50:35 +0000</pubDate>
      
      <guid>https://fahadahammed.github.io/ssh-config-and-ansible-host-generator-and-why-i-am-doing-it-this-way/</guid>
      <description>&lt;p&gt;I am recently playing the role as an SRE and that is why I have to deal with a lot of servers. Not only cloud once or clusters but also bare metals as well as Virtual Machines. For more systematic environment preparation, I have Gitlab pipeline. But for basic tasks like change the config on demand or check a specific directory or search something or any other unpredictable or repeated tasks, I need Ansible for better grasp from my local machine or Bastion server. So, what do I have to do?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create an entry to the .ssh/config file&lt;/li&gt;
&lt;li&gt;Create an entry ansible host file as inventory&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Repeated tasks? For me, yes. I needed to manage these. So, created a python script&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>My Understanding about RUN, CMD and ENTRYPOINT in Dockerfile</title>
      <link>https://fahadahammed.github.io/my-understanding-about-run-cmd-and-entrypoint-in-dockerfile/</link>
      <pubDate>Thu, 25 Nov 2021 08:54:10 +0000</pubDate>
      
      <guid>https://fahadahammed.github.io/my-understanding-about-run-cmd-and-entrypoint-in-dockerfile/</guid>
      <description>&lt;p&gt;Containerization gives us many benefits from packaging to distribution and others. Thus, Docker is widely used as a containerization tool which is designed for running specific tasks and processes, not for hosting operating systems or like other virtualization tools like VMWare, VirtualBox etc. You create a container to serve a single unit task. Once it completes the given task, it stops. The container life-cycle depends on the ongoing process inside of it. Once the process stops,&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Effective use of Redis with Python and Connection Pool</title>
      <link>https://fahadahammed.github.io/effective-use-of-redis-with-python-and-connection-pool/</link>
      <pubDate>Sat, 09 Oct 2021 06:19:57 +0000</pubDate>
      
      <guid>https://fahadahammed.github.io/effective-use-of-redis-with-python-and-connection-pool/</guid>
      <description>&lt;p&gt;I have been working with redis and python for sometime. It is fun to play with python and redis. There are so many things can be solved by redis.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Session persistency&lt;/li&gt;
&lt;li&gt;Caching&lt;/li&gt;
&lt;li&gt;Volatile Datastore&lt;/li&gt;
&lt;li&gt;Job or Message Queue&lt;/li&gt;
&lt;li&gt;Search&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And many more. But recently I was thinking about using it as main database. I am not yet sure what kind of problem I might face or what things to optimize when it is about scalability or reliability. I will for sure share my experience.&lt;/p&gt;
&lt;p&gt;Here I want to talk about –&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to run Python Flask Application?</title>
      <link>https://fahadahammed.github.io/how-to-run-python-flask-application/</link>
      <pubDate>Sat, 11 Sep 2021 11:15:10 +0000</pubDate>
      
      <guid>https://fahadahammed.github.io/how-to-run-python-flask-application/</guid>
      <description>&lt;p&gt;I mostly use Python Flask when I need to develop a Web App or API.&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Why? Because it is:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;lightweight&lt;/li&gt;
&lt;li&gt;Very Flexible&lt;/li&gt;
&lt;li&gt;Micro-Service Friendly&lt;/li&gt;
&lt;li&gt;Fast Development&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These are one of the main reasons I choose Flask. But mostly I love to code with Flask. There are so many ways to run flask applications. I will write some of them here with code examples.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Multi line Log Parser in Python</title>
      <link>https://fahadahammed.github.io/multi-line-log-parser-in-python/</link>
      <pubDate>Tue, 12 Jan 2021 15:59:19 +0000</pubDate>
      
      <guid>https://fahadahammed.github.io/multi-line-log-parser-in-python/</guid>
      <description>&lt;p&gt;So, I have a log file that is not single line log. It is kind of java stack trace. What I needed to do is read those log files and create some actions depending on them. I could use already built tools. But I thought why not just do this as simply as printing strings.&lt;/p&gt;
&lt;p&gt;This is an example of the log format I wanted to play with. It seems too simple to pile up the Filebeats or elastic stack.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Some coding practice with Json, Itertools and Lambda in Python</title>
      <link>https://fahadahammed.github.io/some-coding-practice-with-json-itertools-and-lambda-in-python/</link>
      <pubDate>Sat, 19 Dec 2020 18:39:24 +0000</pubDate>
      
      <guid>https://fahadahammed.github.io/some-coding-practice-with-json-itertools-and-lambda-in-python/</guid>
      <description>&lt;p&gt;I enjoy coding and solving problems. But as I go forward, I find myself in a sea of unknowns. Thus I decided to learn as much as possible to be confident. So, I am learning even the simplest it seems.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Other side of Python eval() function</title>
      <link>https://fahadahammed.github.io/other-side-of-python-eval-function/</link>
      <pubDate>Mon, 26 Oct 2020 16:49:32 +0000</pubDate>
      
      <guid>https://fahadahammed.github.io/other-side-of-python-eval-function/</guid>
      <description>&lt;p&gt;The built-in function “eval()” of python is useful in many cases. But I am gonna talk about it’s negative one.&lt;/p&gt;
&lt;p&gt;Let, you have a function that take arguments from user. If you do eval() on that input, it might create a havoc.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>What does eval() do in Python?</title>
      <link>https://fahadahammed.github.io/what-does-eval-do-in-python/</link>
      <pubDate>Mon, 26 Oct 2020 10:28:10 +0000</pubDate>
      
      <guid>https://fahadahammed.github.io/what-does-eval-do-in-python/</guid>
      <description>&lt;p&gt;I have always loved the fact that The Python interpreter has a number of functions and types built into it. I am going to explore “eval()” in this article.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
